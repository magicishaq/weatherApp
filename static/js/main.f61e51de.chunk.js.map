{"version":3,"sources":["contexts/CityContext.js","Components/Search.js","Components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["CityContext","createContext","Search","useState","city","setCity","list","setList","show","setShow","useContext","setSearch","currentFocus","useRef","a","fetch","json","listOfAllCities","data","map","item","cities","flat","addActive","x","i","length","classList","remove","removeActive","current","add","useEffect","getList","filterdList","filter","toLowerCase","includes","toLocaleLowerCase","submitForm","ev","preventDefault","autoComplete","onSubmit","className","style","width","id","onKeyDown","e","inp","document","getElementById","getElementsByTagName","keyCode","textContent","trim","setTimeout","onChange","target","value","placeholder","onClick","slice","type","Results","search","setCities","cityname","result","status","error","success","message","getData","then","catch","console","log","name","main","temp","weather","description","feels_like","humidity","temp_min","temp_max","wind","speed","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f61e51de.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n//context with a hook\r\nconst CityContext = createContext([\"england\", () => {}]);\r\n\r\nexport default CityContext;","import { useState, useEffect, useRef, useContext } from \"react\";\r\nimport CityContext from \"../contexts/CityContext\";\r\n\r\nconst Search = () => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [list, setList] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [search, setSearch] = useContext(CityContext);\r\n  let currentFocus = useRef();\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (city) {\r\n      setShow(true);\r\n    } else {\r\n      setShow(false);\r\n    }\r\n  }, [city]);\r\n  //popluate list of cities\r\n  async function getList() {\r\n    const url = \"https://countriesnow.space/api/v0.1/countries\";\r\n    const list = await fetch(url);\r\n    const json = await list.json();\r\n    const listOfAllCities = json.data.map((item) => item.cities).flat();\r\n    setList(listOfAllCities);\r\n  }\r\n\r\n  function handleClick(e) {\r\n    setCity(e.target.value);\r\n    currentFocus.current = -1;\r\n    // setList([]); \r\n  }\r\n\r\n  function onKeyDown(e) {\r\n    const inp = document.getElementById(\"myInput\");\r\n    var x = document.getElementById(inp.id + \"autocomplete-list\");\r\n    if (!city) {\r\n      return false;\r\n    }\r\n    if (x) x = x.getElementsByTagName(\"div\");\r\n    if (e.keyCode == 40) {\r\n      currentFocus.current++;\r\n      addActive(x);\r\n    } else if (e.keyCode == 38) {\r\n      //up\r\n      currentFocus.current--;\r\n      addActive(x);\r\n    } else if (e.keyCode == 13) {\r\n      //enter key\r\n      e.preventDefault();\r\n      submitForm(e); \r\n      if (currentFocus.current > -1) {\r\n        //click on active\r\n        if (x) {\r\n          try {\r\n            setCity(x[currentFocus.current].textContent.trim());\r\n            setTimeout(setShow(false), 1);\r\n          } catch (e) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function addActive(x) {\r\n    /*a function to classify an item as \"active\":*/\r\n    if (!x) return false;\r\n    /*start by removing the \"active\" class on all items:*/\r\n    removeActive(x);\r\n    if (currentFocus.current >= x.length) currentFocus.current = 0;\r\n    if (currentFocus.current < 0) currentFocus.current = x.length - 1;\r\n    /*add class \"autocomplete-active\":*/\r\n    x[currentFocus.current].classList.add(\"autocomplete-active\");\r\n  }\r\n  function removeActive(x) {\r\n    /*a function to remove the \"active\" class from all autocomplete items:*/\r\n    for (var i = 0; i < x.length; i++) {\r\n      x[i].classList.remove(\"autocomplete-active\");\r\n    }\r\n  }\r\n  let filterdList = show\r\n  ? list.filter((item) =>\r\n      item.toLowerCase().includes(city.toLocaleLowerCase())\r\n    )\r\n  : [];\r\n  function clickHandlerItem(e) { \r\n\r\n    setCity(e.target.textContent.trim());\r\n    //setSearch(city);\r\n    submitForm(e);  \r\n\r\n  }\r\n  function submitForm (ev)  {\r\n    ev.preventDefault();\r\n    setSearch(city);\r\n    setShow(false); \r\n  }\r\n  \r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      onSubmit={submitForm}\r\n    >\r\n      <div className=\"autocomplete\" style={{ width: \"300px\" }}>\r\n        <input\r\n          id=\"myInput\"\r\n          onKeyDown={onKeyDown}\r\n          onChange={handleClick}\r\n          \r\n          value={city}\r\n          placeholder=\"Enter a city\"\r\n        />\r\n        <div\r\n          id=\"myInputautocomplete-list\"\r\n          className=\"autocomplete-items\"\r\n          onClick={clickHandlerItem}\r\n        >\r\n          {filterdList.slice(0, 5).map((item, id) => (\r\n            <div className=\"fList\" data-id={id} key={id}>\r\n              {\" \"}\r\n              {item} <input type=\"hidden\" value={item} />{\" \"}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n};\r\nexport default Search;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport CityContext from \"../contexts/CityContext\";\r\n\r\nconst Results = ({ search }) => {\r\n  const [cities, setCities] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (search[0].length > 0) {\r\n      getData(search[0])\r\n        .then((json) => setCities(json))\r\n        .then(() => setShow(true))\r\n        .catch((error) => setShow(false));\r\n    } else {\r\n      console.log(\"empty\");\r\n      setShow(false);\r\n    }\r\n    console.log(cities);\r\n  }, [search]);\r\n\r\n  async function getData(cityname) {\r\n    const API = `2191268cc6ab9899560808af14219013`;\r\n    try {\r\n      const result = await fetch(\r\n        `//api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=${API}`\r\n      );\r\n      if (result.status === 200) {\r\n        const json = await result.json();\r\n        return json;\r\n      } else {\r\n        return { error: true };\r\n      }\r\n    } catch (ex) {\r\n      return { success: false, error: ex.message };\r\n    }\r\n  }\r\n  if (show && !cities.error) {\r\n    return (\r\n      <ul>\r\n        <li>\r\n          The temperature of {cities.name} is {cities.main.temp}  degrees celsius\r\n        </li>\r\n        <li>Today its : {cities.weather[0].main}</li>\r\n        <li> {cities.weather[0].description} </li>\r\n        <li> {cities.main.feels_like} </li>\r\n        <li> humidity is : {cities.main.humidity}  g.m </li>\r\n        <li> Minimum temperature is : {cities.main.temp_min}  degrees celsius </li>\r\n        <li> Maximum temperature is : {cities.main.temp_max}  degrees celsius</li>\r\n        <li> The wind speed is: {cities.wind.speed} mph </li>\r\n      </ul>\r\n    );\r\n  }\r\n  else  {\r\n    return <p>Search for your weather in any city in the world</p>;\r\n  }\r\n  \r\n};\r\n\r\nexport default Results;\r\n","import './App.css';\nimport Search from './Components/Search';\nimport Results from './Components/Results'; \nimport CityContext from './contexts/CityContext';\n\n\nimport { useState, } from 'react';\n\n\n\nfunction App() {\n  //set the search state\n  //set the search reults options from  list \n  ///theme\n  const search = useState(''); \n  \n  return (\n    <CityContext.Provider value={search}>\n    <div className=\"grid\">\n      <header className=\"heading\">\n        <h1> My Weather App </h1>\n      </header>\n      <aside className=\"searchbar\">\n        <Search/>     \n      </aside>\n      <article className=\"results\">\n        <Results search= {search} /> \n      </article>\n      <footer className=\"footer\">\n        By Ishaq Khan\n      </footer>\n    </div>\n    </CityContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}